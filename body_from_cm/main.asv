

clear
close all
clc

experiment_path = 'H:\My Drive\dark 2022\2022_03_03\'
segmentation_path = [experiment_path,'hull\hull_Reorder\mov19\Segmentation\mov19_seg']
easywand_path = [experiment_path,'3+4_post_03_03_2022_skip5_easyWandData']


% experiment_path = 'H:\My Drive\dark 2022\2023_08_07_5ms\'
% segmentation_path = [experiment_path,'hull\hull_Reorder\mov20\Segmentation\mov20_seg']
% easywand_path = [experiment_path,'7_8_23_easyWandData']

load(easywand_path)
load(segmentation_path)
%%
 


for j= 1:1:4
[R,K,X0,H] = decompose_dlt(easyWandData.coefs(:,j),easyWandData.rotationMatrices(:,:,j)');
camera(:,:,j) = [K,R,X0];
rotation_allcam(:,:,j) =  R; 
translation(:,:,j) = X0; 
pmdlt{j} = [K*R,-K*R*X0];
intrinsic{j} = K;
camera_center{j} = X0;

end


r = vrrotvec(rotation_allcam(3,:,1),[0,0,1])
m = vrrotvec2mat(r)

%%

% ray_ndc = [(pixels[1] - self.cx)/self.fx,(pixels[0] - self.cy)/self.fy,1]
% np.dot(self.R.T,ray_ndc) + self.X0.T
% 


for index = 1:1:4
fx_cam(index) = intrinsic{index}(1,1);
fy_cam(index) = intrinsic{index}(2,2);
cx_cam(index) = intrinsic{index}(1,3);
cy_cam(index) = intrinsic{index}(2,3);
rotation = rotation_allcam(:,:,index);
end
%%
cm_3d= []
for frame = 1:1:1500
    try
for index = 1:1:4
% binaryImage = ImfromSp([800,1280],seg.body{index}(frame).indIm);
% labeledImage = bwlabel(binaryImage);
% stats = regionprops(labeledImage, 'Area');
% [~, largestBlobIndex] = max([stats.Area]);
% largestBlob = ismember(labeledImage, largestBlobIndex);
% [row,col] = find(largestBlob);
% cm(index,:) = mean([row,col]);
if length(seg.body{index}(frame).indIm ) > 1
cm(index,:) = mean(seg.body{index}(frame).indIm);
ray(index,:) = [(cm(index,1) - cx_cam(index) )/fx_cam(index),(cm(index,2) - cy_cam(index) )/fy_cam(index),1];

ray_center_pixel(index,:) = rotation'*ray(index,:)' + camera_center{index};
end

end
center = cell2mat(camera_center)';
ray = ray_center_pixel;
cm_3d(frame,:) = lineIntersect3D(ray,center);
    catch
        continue
    end
end




plot_camera(rotation_allcam,translation,m,'standard wand')

cm_labax = (m*cm_3d')'
scatter3(cm_labax(:,1),cm_labax(:,2),cm_labax(:,3),5,'filled')




