
from PreProcess import PreProcess
import matplotlib.pyplot as plt
import h5py
import pandas as pd
import os
import re
from scipy.signal import savgol_filter



def create_datasets(group,sub_group_name,data):
    """create fields of datasets and save it in the HDF5 file, save the heading of the data as attribution

    Args:
        group (HDF5 object): a group of the hdf5 file
        sub_group_name (string): name of the group
        data (dataframe): dataframe that contains all data
    """
    
    group[sub_group_name] =  data
    group[sub_group_name].attrs['header'] = list(data.columns)

    

def smooth_and_clip_mov(ax,ax_twin,pre_proc,mov):
        ax.clear()
        ax_twin.clear()
        pre_proc.load_csv(mov)
        pre_proc.filter_body_wing_and_derive()
        pre_proc.manual_clip_frames(mov,ax,ax_twin)   

        # if f'mov{mov}' not in pre_proc.exp_file.keys(): pre_proc.manual_clip_frames(mov,ax,ax_twin)   

if __name__ == '__main__':   

    exp_dir = 'H:/My Drive/dark 2022/csv_dark'
    exp_name = '2022_05_19'
    hdf5_file_name = '2022_05_19_40ms'
    pertubation_name = hdf5_file_name.split('_')[-1]
    smoothing_config = {'smooth_window_body': 211, 'smooth_poly_body':4, 'smooth_window_wing': 15,
                        'smooth_poly_wing': 2, 'zscore_window':200,'zscore_threashold': 3,
                        'interp_method' : 'cubic'}
    mov = 1
    exp_path = f'{exp_dir}/{exp_name}'
    mov_path = f'{exp_path}/{exp_name}_mov_{mov}'
    h5_file  = h5py.File(f'{exp_dir}/{hdf5_file_name}.hdf5', "a")
    h5_file.attrs['dark_pert'] = pertubation_name
    ew_to_lab_rotmat = pd.read_csv(f'{mov_path}_ew_to_lab_rotmat.csv', header = None)
    h5_file.attrs['ew_to_lab_rotmat'] = ew_to_lab_rotmat



    
    files_in_exp = os.listdir(f'{exp_dir}/{exp_name}')
    movs = list(set([int(re.findall(r'\d+',file.split('_mov_')[1])[0]) for file in files_in_exp if 'mov' in file]))
    pre_proc = PreProcess(exp_dir,exp_name,smoothing_config)


    fig, ax = plt.subplots()
    ax_twin = ax.twinx()
    [smooth_and_clip_mov(ax,ax_twin,pre_proc,mov) for mov in movs[0:3]]
    
    for mov_name in pre_proc.exp_dict.keys():
        pre_proc.exp_dict[mov_name].get_strokes()
        pre_proc.exp_dict[mov_name].project_body_props_on_xy(['CM_real_x_body','CM_real_y_body','CM_real_z_body'],'CM_xy')
        pre_proc.exp_dict[mov_name].calculate_angles_frame_ref_axes()

        keys = list(pre_proc.exp_dict[mov_name].data.keys() )
        sub_group_name = keys[0]
        mov_group = h5_file.create_group(f'/{mov_name}/')
        mov_group[sub_group_name] = pre_proc.exp_dict[mov_name].data[sub_group_name].astype(float)
        mov_group[sub_group_name].attrs['header'] = list(pre_proc.exp_dict[mov_name].header[sub_group_name])

    h5_file.close()




